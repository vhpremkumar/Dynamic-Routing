//
// Generated file, do not edit! Created by nedtool 5.4 from node/Packet.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __PACKET_M_H
#define __PACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>node/Packet.msg:7</tt> by nedtool.
 * <pre>
 * packet Packet
 * {
 *     int srcAddr \@packetData;
 *     int destAddr \@packetData;
 *     int type \@packetData; // 0: data, 1: hb-req, 2: hb-res, 3: hb-init  
 *     int data[1024] \@packetData;
 *     int sendData[7] \@packetData;  // 1 2 3 4
 *     int receiveData[7] \@packetData; // 1 2 3 4
 *     simtime_t creationTime;
 *     \@packetData;
 * }
 * </pre>
 */
class Packet : public ::omnetpp::cPacket
{
  protected:
    int srcAddr;
    int destAddr;
    int type;
    int data[1024];
    int sendData[7];
    int receiveData[7];
    ::omnetpp::simtime_t creationTime;

  private:
    void copy(const Packet& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Packet&);

  public:
    Packet(const char *name=nullptr, short kind=0);
    Packet(const Packet& other);
    virtual ~Packet();
    Packet& operator=(const Packet& other);
    virtual Packet *dup() const override {return new Packet(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSrcAddr() const;
    virtual void setSrcAddr(int srcAddr);
    virtual int getDestAddr() const;
    virtual void setDestAddr(int destAddr);
    virtual int getType() const;
    virtual void setType(int type);
    virtual unsigned int getDataArraySize() const;
    virtual int getData(unsigned int k) const;
    virtual void setData(unsigned int k, int data);
    virtual unsigned int getSendDataArraySize() const;
    virtual int getSendData(unsigned int k) const;
    virtual void setSendData(unsigned int k, int sendData);
    virtual unsigned int getReceiveDataArraySize() const;
    virtual int getReceiveData(unsigned int k) const;
    virtual void setReceiveData(unsigned int k, int receiveData);
    virtual ::omnetpp::simtime_t getCreationTime() const;
    virtual void setCreationTime(::omnetpp::simtime_t creationTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Packet& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Packet& obj) {obj.parsimUnpack(b);}


#endif // ifndef __PACKET_M_H

